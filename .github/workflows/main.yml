name: Build and Deploy WAR to EC2

on:
  push:
    branches:
      - main

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout source
      uses: actions/checkout@v3

    - name: ☕ Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: 🛠️ Build WAR with Maven
      run: mvn clean package -DskipTests

    - name: 📤 Copy WAR to EC2 via SCP
      uses: appleboy/scp-action@v0.1.3
      with:
        host: ${{ secrets.AWS_HOST }}
        username: ${{ secrets.AWS_USER }}
        key: ${{ secrets.AWS_KEY }}
        source: target/*.war
        target: /home/ubuntu/app/

    - name: 🚀 Start Spring Boot WAR on EC2
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.AWS_HOST }}
        username: ${{ secrets.AWS_USER }}
        key: ${{ secrets.AWS_KEY }}
        script: |
          echo "🟢 Java 설치 확인/진행..."
          if ! type java >/dev/null 2>&1; then
            sudo apt-get update -y
            sudo apt-get install -y openjdk-17-jdk
          fi

          echo "🛑 Killing old process using port 8888 (if any)..."
          PID=$(sudo lsof -t -i:8888)
          if [ ! -z "$PID" ]; then
            sudo kill -9 $PID
          fi

          echo "🧹 Cleaning previous log files..."
          rm -f /home/ubuntu/app/*.log

          echo "🚀 Starting new WAR app in background..."
          nohup java -jar /home/ubuntu/app/*.war --server.port=8888 > /home/ubuntu/app/log.txt 2>&1 &

name: Java Maven Build & Deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Build with Maven
        run: mvn -B clean package -DskipTests

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: springboot-app
          path: target/*.jar

      - name: Copy JAR to EC2
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USER }}
          key: ${{ secrets.AWS_KEY }}
          source: "target/*.jar"
          target: "/home/ubuntu/app/"

      - name: Deploy on EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USER }}
          key: ${{ secrets.AWS_KEY }}
          debug: true
          script: |
            #!/bin/bash
            set -e

            APP_DIR=/home/ubuntu/app
            cd "$APP_DIR"

            # 1) PID 파일 읽기
            if [[ -f app.pid ]]; then
              OLD_PID=$(cat app.pid)
              if ps -p "$OLD_PID" > /dev/null 2>&1; then
                echo "▶ 이전 프로세스 종료(PID=$OLD_PID)"
                kill "$OLD_PID" && sleep 5
              fi
            fi

            # 2) 최신 JAR 선택
            JAR_PATH=$(find . -maxdepth 2 -name "*.jar" -type f -printf "%T@ %p\n" \
                       | sort -nr | head -n1 | cut -d' ' -f2-)
            if [[ -z "$JAR_PATH" ]]; then
              echo "❌ JAR 파일이 없음"; exit 1
            fi
            echo "▶ 실행 JAR: $JAR_PATH"

            # 3) 새 프로세스 실행 + PID 저장
            nohup java -jar "$JAR_PATH" > app.log 2>&1 &
            NEW_PID=$!
            echo "$NEW_PID" > app.pid
            echo "✅ 배포 완료(PID=$NEW_PID)"
